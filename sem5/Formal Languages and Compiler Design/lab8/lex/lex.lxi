%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int currentLine = 1;
%}

%option noyywrap

letter          [A-Za-z]
digit           [0-9]
non_zero_digit  [1-9]
identifier      "$"{letter}(""{letter}|{digit})*
integer         [+-]?({non_zero_digit}{digit}*|0)
char_literal    [\'][a-zA-Z0-9][\']
string_literal  [\"][^\"]*[\"]

%%
"Program"|"int"|"string"|"bool"|"for"|"while"|"if"|"else"|"scan"|"print"|"break"|"while"   {printf("Reserved word: %s\n", yytext);}
"+"|"-"|""|"/"|"%"|"="|"!"|"!="|"=="|"="|"<"|">"|">="|"<="|"||"|"&&"|"->"		                {printf("Operator: %s\n", yytext);}
"["|"]"|"{"|"}"|"("|")"|","|";"|"'"                                                                    {printf("Separator: %s\n", yytext);}
{identifier}		                                                                                        {printf("Identifier: %s\n", yytext);}
{integer}	                                                                                            {printf("Number: %s\n", yytext);}
{char_literal}                                                                                       {printf("Char: %s\n", yytext);}
{string_literal}                                                                                     {printf("String: %s\n", yytext);}

[ \t]+                                                                                              {}
[\n]+                                                                                              {currentLine++;}

[a-zA-Z]([a-zA-Z]|[0-9])* {
    printf("Illegal identifier at line %d\n", currentLine);
    return 0;
}

%%

int main(int argc, char** argv) {
    if (argc > 1) {
        FILE *file;
        file = fopen(argv[1], "r");
        if (!file) {
            fprintf(stderr, "Could not open %s\n", argv[1]);
            exit(1);
        }
        yyin = file;
    }

    yylex();
    return 0;
}